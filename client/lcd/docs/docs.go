// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag at
// 2018-07-09 10:52:33.917498846 +0800 CST m=+0.182625290

package docs

import (
	"github.com/swaggo/swag"
)

var doc = `{
    "swagger": "2.0",
    "info": {
        "description": "All cosmos-lcd supported APIs will be shown by this swagger-ui page",
        "title": "Swagger Cosmos-LCD API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "localhost:1317",
    "basePath": "/",
    "paths": {
        "/ICS20/accounts/{address}": {
            "get": {
                "description": "Get the detailed information for specific address",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ICS20"
                ],
                "summary": "Query account information",
                "parameters": [
                    {
                        "type": "string",
                        "description": "address",
                        "name": "address",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/auth.BaseAccount"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/ICS20/create_transfer": {
            "post": {
                "description": "Build transaction",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ICS20"
                ],
                "summary": "Build transaction",
                "parameters": [
                    {
                        "description": "create transaction parameters",
                        "name": "transferBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/bank.transferBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK. The returned string is the base64 encoding",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/ICS20/signed_transfer": {
            "post": {
                "description": "Broadcast signed transaction.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ICS20"
                ],
                "summary": "Broadcast signed transaction",
                "parameters": [
                    {
                        "description": "Signed transaction. Transaction data, signatures and public keys should be base64 encoding string",
                        "name": "signedTransaction",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/bank.signedBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/bank.ResultBroadcastTxCommit"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/ICS20/accounts/{address}/send": {
            "post": {
                "description": "This API require the Cosmos-LCD have keystore module. It will ask keystore module for transaction signature",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ICS20"
                ],
                "summary": "Send coins to a address",
                "parameters": [
                    {
                        "type": "string",
                        "description": "address to send asset",
                        "name": "address",
                        "in": "path"
                    },
                    {
                        "description": "transfer asset",
                        "name": "sendAsset",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/bank.sendBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/bank.ResultBroadcastTxCommit"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/ICS19/keys": {
            "get": {
                "description": "Get all keys in the key store",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ICS19"
                ],
                "summary": "list all keys",
                "operationId": "queryKeysRequest",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/keys.KeyOutputs"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new key and persistent it to the key store",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ICS19"
                ],
                "summary": "Create a account",
                "parameters": [
                    {
                        "description": "name and password for a new key",
                        "name": "nameAndPwd",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/keys.NewKeyBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/keys.KeyOutput"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/ICS19/keys/get/{name}": {
            "get": {
                "description": "Get detailed information for specific key name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ICS19"
                ],
                "summary": "Get key information",
                "parameters": [
                    {
                        "type": "string",
                        "description": "key name",
                        "name": "name",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/keys.KeyOutput"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/ICS19/keys/seed": {
            "get": {
                "description": "Get a seed for creating key",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ICS19"
                ],
                "summary": "Get a seed",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/ICS19/keys/{name}": {
            "put": {
                "description": "The keys are protected by the password, here this API provides a way to change the password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ICS19"
                ],
                "summary": "Change key password",
                "parameters": [
                    {
                        "type": "string",
                        "description": "key name",
                        "name": "name",
                        "in": "path"
                    },
                    {
                        "description": "key name",
                        "name": "pwd",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/keys.UpdateKeyBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "delete specific name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ICS19"
                ],
                "summary": "Delete key",
                "parameters": [
                    {
                        "type": "string",
                        "description": "key name",
                        "name": "name",
                        "in": "path"
                    },
                    {
                        "description": "password",
                        "name": "pwd",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/keys.DeleteKeyBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/node_version": {
            "get": {
                "description": "Get connected node version REST handler endpoint",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "version"
                ],
                "summary": "Get connected node version REST handler endpoint",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/version": {
            "get": {
                "description": "Get Cosmos-LCD version REST handler endpoint",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "version"
                ],
                "summary": "Get Cosmos-LCD version REST handler endpoint",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "auth.BaseAccount": {
            "type": "object",
            "properties": {
                "account_number": {
                    "type": "integer"
                },
                "address": {
                    "type": "string"
                },
                "coins": {
                    "type": "object",
                    "$ref": "#/definitions/sdk.Coins"
                },
                "public_key": {
                    "type": "string"
                },
                "sequence": {
                    "type": "integer"
                }
            }
        },
        "bank.ResponseCheckTx": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "type": "string"
                },
                "fee": {
                    "type": "object",
                    "$ref": "#/definitions/common.KI64Pair"
                },
                "gas_used": {
                    "type": "integer"
                },
                "gas_wanted": {
                    "type": "integer"
                },
                "info": {
                    "type": "string"
                },
                "log": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "$ref": "#/definitions/common.KVPairs"
                    }
                }
            }
        },
        "bank.ResponseDeliverTx": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "type": "string"
                },
                "fee": {
                    "type": "object",
                    "$ref": "#/definitions/common.KI64Pair"
                },
                "gas_used": {
                    "type": "integer"
                },
                "gas_wanted": {
                    "type": "integer"
                },
                "info": {
                    "type": "string"
                },
                "log": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "$ref": "#/definitions/common.KVPairs"
                    }
                }
            }
        },
        "bank.ResultBroadcastTxCommit": {
            "type": "object",
            "properties": {
                "check_tx": {
                    "type": "object",
                    "$ref": "#/definitions/bank.ResponseCheckTx"
                },
                "deliver_tx": {
                    "type": "object",
                    "$ref": "#/definitions/bank.ResponseDeliverTx"
                },
                "hash": {
                    "type": "string"
                },
                "height": {
                    "type": "integer"
                }
            }
        },
        "bank.signedBody": {
            "type": "object",
            "properties": {
                "public_key_list": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "signature_list": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "transaction_data": {
                    "type": "string"
                }
            }
        },
        "bank.transferBody": {
            "type": "object",
            "properties": {
                "account_number": {
                    "type": "integer"
                },
                "amount": {
                    "type": "integer"
                },
                "denomination": {
                    "type": "string"
                },
                "ensure_account_sequence": {
                    "type": "boolean"
                },
                "from_address": {
                    "type": "string"
                },
                "gas": {
                    "type": "integer"
                },
                "sequence": {
                    "type": "integer"
                },
                "to_address": {
                    "type": "string"
                }
            }
        },
        "bank.sendBody": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "amount": {
                    "type": "object",
                    "$ref": "#/definitions/sdk.Coins"
                },
                "password": {
                    "type": "string"
                },
                "chain_id": {
                    "type": "string"
                },
                "account_number": {
                    "type": "integer"
                },
                "gas": {
                    "type": "integer"
                },
                "sequence": {
                    "type": "integer"
                }
            }
        },
        "sdk.Coin": {
            "type": "object",
            "properties": {
                "denom": {
                    "type": "string"
                },
                "amount": {
                    "type": "string"
                }
            }
        },
        "sdk.Coins": {
            "type": "array",
            "items": {
                "type": "object",
                "$ref": "#/definitions/sdk.Coin"
            }

        },
        "common.KVPair": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "integer"
                }
            }
        },
        "common.KVPairs": {
            "type": "array",
            "items": {
                "type": "object",
                "$ref": "#/definitions/common.KVPair"
            }

        },
        "common.KI64Pair": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "integer"
                }
            }
        },
        "httputil.HTTPError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 400
                },
                "message": {
                    "type": "string",
                    "example": "status bad request"
                }
            }
        },
        "keys.DeleteKeyBody": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                }
            }
        },
        "keys.KeyOutput": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "pub_key": {
                    "type": "string"
                },
                "seed": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "keys.KeyOutputs": {
            "type": "array",
            "items": {
                "type": "object",
                "$ref": "#/definitions/keys.KeyOutput"
            }
        },
        "keys.NewKeyBody": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "keys.UpdateKeyBody": {
            "type": "object",
            "properties": {
                "new_password": {
                    "type": "string"
                },
                "old_password": {
                    "type": "string"
                }
            }
        }
    }
}`

type s struct{}

func (s *s) ReadDoc() string {
	return doc
}
func init() {
	swag.Register(swag.Name, &s{})
}
